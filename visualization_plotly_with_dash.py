# -*- coding: utf-8 -*-
"""Visualization plotly with dash.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tXl6EaAKsbNRb0vzE6Tg4YkvQkvOIoL0
"""

! pip install dash

import plotly.express as px
import pandas as pd
import dash
from dash import html,dcc

df=pd.read_csv("/content/drive/MyDrive/Data/ecom_data.csv")
df.head()

Quentity_of_month=df.groupby("Year-Month")["Quantity"].agg("sum").reset_index()
Quentity_of_month

px.bar(Quentity_of_month,x="Year-Month",y="Quantity",title="Quentity of month")

Max_month_gountity=df.sort_values(by="Quantity",ascending=False).iloc[0]["Year-Month"]
Max_month_gountity

total_month_value=df.groupby("Year-Month")["OrderValue"].agg("sum").reset_index()
total_month_value

px.line(total_month_value,x="Year-Month",y="OrderValue",title="total month value")

total_country_value=df.groupby("Country")["OrderValue"].agg("sum").reset_index()
total_country_value

px.bar(total_country_value,x="Country",y="OrderValue",title="total country value")

Max_country=df.sort_values(by="OrderValue",ascending=False).iloc[0]["Country"]
Max_country

major_category=df.groupby("Major Category")["OrderValue"].agg("sum").reset_index()
major_category

count_majot_categry=df["Major Category"].value_counts()
count_majot_categry

import dash
from dash import dcc, html
import plotly.express as px
import pandas as pd

# افترض أن لديك بيانات مسبقًا مثل Quentity_of_month و total_country_value
# بيانات تجريبية، يمكنك استبدالها ببياناتك الفعلية
Quentity_of_month = pd.DataFrame({
    "Year-Month": ["2010-12", "2011-01", "2011-02", "2011-03", "2011-04", "2011-05", "2011-06", "2011-07", "2011-08", "2011-09", "2011-10", "2011-11", "2011-12"],
    "Quantity": [397, 1184, 1132, 1660, 185, 1668, 1733, 987, 1251, 2002, 693, 1513, 201]
})

total_country_value = pd.DataFrame({
    "Country": ["USA", "Canada", "UK", "Germany", "France"],
    "OrderValue": [5000, 3000, 4000, 3500, 4500]
})

app = dash.Dash(__name__)

app.layout = html.Div([
    html.Div(
        html.H1("E-commerce Dashboard", style={
            'color': '#003366',
            'text-align': 'center',
            'margin-bottom': '30px',
            'font-family': 'Arial, sans-serif'
        }),
        style={'margin-bottom': '30px'}
    ),

    # First row with two charts
    html.Div([
        html.Div(
            dcc.Graph(
                figure=px.bar(Quentity_of_month, x="Year-Month", y="Quantity", title="Quantity of Month")
                    .update_layout(
                        title_font=dict(size=20, color='#003366'),
                        xaxis_title='Month',
                        yaxis_title='Quantity',
                        xaxis=dict(tickangle=-45),
                        plot_bgcolor='rgba(245, 245, 245, 0.8)',
                        margin=dict(l=50, r=50, t=50, b=100)
                    )
            ),
            style={
                'background-color': '#e0f7fa',
                'padding': '20px',
                'border-radius': '10px',
                'box-shadow': '0px 4px 12px rgba(0, 0, 0, 0.2)',
                'border': '1px solid #ddd',
                'width': '48%',
                'display': 'inline-block',
                'vertical-align': 'top'
            }
        ),
        html.Div(
            dcc.Graph(
                figure=px.bar(total_country_value, x="Country", y="OrderValue", title="Total Country Value")
                    .update_layout(
                        title_font=dict(size=20, color='#003366'),
                        xaxis_title='Country',
                        yaxis_title='Order Value',
                        plot_bgcolor='rgba(245, 245, 245, 0.8)',
                        margin=dict(l=50, r=50, t=50, b=100)
                    )
            ),
            style={
                'background-color': '#fff3e0',
                'padding': '20px',
                'border-radius': '10px',
                'box-shadow': '0px 4px 12px rgba(0, 0, 0, 0.2)',
                'border': '1px solid #ddd',
                'width': '48%',
                'display': 'inline-block',
                'vertical-align': 'top'
            }
        ),
    ], style={
        'text-align': 'center',
        'margin-bottom': '30px',
        'display': 'flex',
        'justify-content': 'space-between'
    }),

    # Second row with two charts
    html.Div([
        html.Div(
            dcc.Graph(
                figure=px.pie(total_country_value, names='Country', values='OrderValue', title="Order Value Distribution")
                    .update_layout(
                        title_font=dict(size=20, color='#003366'),
                        plot_bgcolor='rgba(245, 245, 245, 0.8)',
                        margin=dict(l=50, r=50, t=50, b=100)
                    )
            ),
            style={
                'background-color': '#e8f5e9',
                'padding': '20px',
                'border-radius': '10px',
                'box-shadow': '0px 4px 12px rgba(0, 0, 0, 0.2)',
                'border': '1px solid #ddd',
                'width': '48%',
                'display': 'inline-block',
                'vertical-align': 'top'
            }
        ),
        html.Div(
            dcc.Graph(
                figure=px.line(Quentity_of_month, x="Year-Month", y="Quantity", title="Monthly Quantity Trends")
                    .update_layout(
                        title_font=dict(size=20, color='#003366'),
                        xaxis_title='Month',
                        yaxis_title='Quantity',
                        plot_bgcolor='rgba(245, 245, 245, 0.8)',
                        margin=dict(l=50, r=50, t=50, b=100)
                    )
            ),
            style={
                'background-color': '#fce4ec',
                'padding': '20px',
                'border-radius': '10px',
                'box-shadow': '0px 4px 12px rgba(0, 0, 0, 0.2)',
                'border': '1px solid #ddd',
                'width': '48%',
                'display': 'inline-block',
                'vertical-align': 'top'
            }
        ),
    ], style={
        'text-align': 'center',
        'display': 'flex',
        'justify-content': 'space-between'
    }),

], style={'padding': '20px', 'background-color': '#f0f0f0'})

if __name__ == '__main__':
    app.run_server(debug=True, use_reloader=False, port=302)